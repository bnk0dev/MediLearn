@model Medilearn.Models.DTOs.CourseDto
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    Layout = "_LayoutPersonnel";
    ViewBag.Title = "Kurs Detayları";
    var tokens = Antiforgery.GetAndStoreTokens(Context);
}

<h2>@Model.Title</h2>
<p>@Model.Description</p>
<p><strong>Başlangıç:</strong> @Model.StartDate.ToString("yyyy-MM-dd")</p>
<p><strong>Bitiş:</strong> @Model.EndDate.ToString("yyyy-MM-dd")</p>

@if (!string.IsNullOrEmpty(Model.MaterialFileName))
{
    <div style="height: 600px;">
        <iframe src="@Model.MaterialFileName" style="width:100%; height:100%;" frameborder="0"></iframe>
    </div>
}

<button id="completeCourseBtn" class="btn btn-danger mt-3" style="display:none;">Kursu Bitir</button>

@section Scripts {
    <script>
        setTimeout(() => {
            document.getElementById('completeCourseBtn').style.display = 'inline-block';
        }, 30000);

        document.getElementById('completeCourseBtn').addEventListener('click', () => {
            fetch('@Url.Action("CompleteCourse", "Personnel")', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': '@tokens.RequestToken',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ courseId: @Model.Id })
            })
            .then(response => {
                if (response.ok) {
                    alert('Kurs başarıyla tamamlandı!');
                    window.location.href = '@Url.Action("Index", "Personnel")';
                } else {
                    alert('Bir hata oluştu.');
                }
            });
        });
    </script>
}
