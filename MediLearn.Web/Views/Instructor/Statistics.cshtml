@model Medilearn.Models.ViewModels.InstructorStatisticsViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewBag.Title = Localizer["StatisticsTitle"];
    Layout = "_LayoutInstructor";
}

<link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    .summary-box {
        background-color: #b02a37;
        color: #fff;
        padding: 1rem 1.5rem;
        border-radius: 0.375rem;
        font-weight: 600;
        margin-bottom: 2rem;
        text-align: center;
    }

    .container-split {
        display: flex;
        gap: 2rem;
        margin-top: 2rem;
        flex-wrap: nowrap;
        align-items: flex-start;
    }

    .left-panel, .right-panel {
        flex: 1 1 45%;
        min-width: 300px;
        border: 2px solid #b02a37;
        border-radius: 8px;
        padding: 1rem;
        background-color: #fff;
        min-height: 300px;
        overflow-y: auto;
    }

    h3 {
        color: #b02a37;
        margin-bottom: 1rem;
        font-weight: 700;
        text-align: center;
    }

    #coursesTable tbody tr.table-primary {
        background-color: #dc3545 !important;
        color: #fff;
    }

    #chartContainer {
        width: 100%;
        max-width: 400px;
        margin: 0 auto 1rem auto;
    }
</style>

<h2 class="text-danger text-center">@ViewBag.Title</h2>

<div class="summary-box">
    @Localizer["TotalCourses"]: <strong>@Model.TotalCourses</strong> |
    @Localizer["TotalEnrollments"]: <strong>@Model.TotalEnrollments</strong>
</div>

<div class="container-split">

    <div class="left-panel">
        <h3>@Localizer["Courses"]</h3>
        <table id="coursesTable" class="table table-striped table-bordered table-hover" style="width:100%">
            <thead class="table-light">
                <tr>
                    <th>@Localizer["CourseName"]</th>
                    <th>@Localizer["PersonnelCount"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model.Courses)
                {
                    <tr data-course-id="@course.CourseId" style="cursor:pointer;">
                        <td>@course.CourseTitle</td>
                        <td>@course.Personnel.Count()</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="right-panel">
        <h3>@Localizer["RegisteredPersonnel"]</h3>

        <div id="chartContainer">
            <canvas id="completionChart"></canvas>
        </div>

        <table id="personnelTable" class="table table-striped table-bordered" style="width:100%">
            <thead class="table-light">
                <tr>
                    <th>@Localizer["IDNumber"]</th>
                    <th>@Localizer["FirstName"]</th>
                    <th>@Localizer["LastName"]</th>
                    <th>@Localizer["Email"]</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        $(document).ready(function () {
            var coursesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Courses));

            var coursesTable = $('#coursesTable').DataTable({
                lengthMenu: [5, 10, 15, 50],
                pageLength: 5,
                order: [[0, 'asc']],
                language: {
                    url: `//cdn.datatables.net/plug-ins/1.13.6/i18n/${$('html').attr('lang') || 'tr'}.json`
                }
            });

            var personnelTable = $('#personnelTable').DataTable({
                language: {
                    url: `//cdn.datatables.net/plug-ins/1.13.6/i18n/${$('html').attr('lang') || 'tr'}.json`
                },
                columns: [
                    {
                        data: 'TCNo',
                        render: function (data) {
                            if (!data || data.length < 2) return data;
                            return data.substring(0, 2) + '*'.repeat(data.length - 2);
                        }
                    },
                    { data: 'FirstName' },
                    { data: 'LastName' },
                    { data: 'Email' }
                ],
                paging: true,
                searching: false,
                info: false,
                lengthChange: false,
                pageLength: 10
            });

            var completionChart;

            function updateChart(total, completed) {
                var ctx = document.getElementById('completionChart').getContext('2d');

                var data = {
                    labels: [
                        '@Localizer["Completed"]',
                        '@Localizer["NotCompleted"]'
                    ],
                    datasets: [{
                        data: [completed, total - completed],
                        backgroundColor: ['#dc3545', '#e9ecef'],
                        hoverBackgroundColor: ['#a71d2a', '#ced4da'],
                        borderWidth: 1
                    }]
                };

                var options = {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: { font: { size: 14, weight: 'bold' } }
                        }
                    }
                };

                if (completionChart) {
                    completionChart.data = data;
                    completionChart.options = options;
                    completionChart.update();
                } else {
                    completionChart = new Chart(ctx, {
                        type: 'doughnut',
                        data: data,
                        options: options
                    });
                }
            }

            function populatePersonnelTable(personnelList) {
                personnelTable.clear();
                if (personnelList.length === 0) {
                    $('#personnelTable tbody').html(
                        `<tr><td colspan="4" class="text-center text-muted">@Localizer["NoPersonnelYet"]</td></tr>`
                    );
                } else {
                    personnelTable.rows.add(personnelList);
                }
                personnelTable.draw();
            }

            if (coursesData.length > 0) {
                populatePersonnelTable(coursesData[0].Personnel);
                updateChart(coursesData[0].Personnel.length, coursesData[0].CompletedCount || 0);
                $('#coursesTable tbody tr').eq(0).addClass('table-primary');
            }

            $('#coursesTable tbody').on('click', 'tr', function () {
                $('#coursesTable tbody tr').removeClass('table-primary');
                $(this).addClass('table-primary');

                var index = coursesTable.row(this).index();
                var selected = coursesData[index];

                populatePersonnelTable(selected.Personnel);
                updateChart(selected.Personnel.length, selected.CompletedCount || 0);
            });
        });
    </script>
}
